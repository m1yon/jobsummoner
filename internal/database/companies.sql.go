// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: companies.sql

package database

import (
	"context"
	"time"
)

const createCompany = `-- name: CreateCompany :exec
INSERT INTO companies (id, created_at, updated_at, name, url)
VALUES (?, ?, ?, ?, ?)
`

type CreateCompanyParams struct {
	ID        int64
	CreatedAt time.Time
	UpdatedAt time.Time
	Name      string
	Url       string
}

func (q *Queries) CreateCompany(ctx context.Context, arg CreateCompanyParams) error {
	_, err := q.db.ExecContext(ctx, createCompany,
		arg.ID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.Name,
		arg.Url,
	)
	return err
}

const getCompany = `-- name: GetCompany :one
SELECT created_at, updated_at, last_posted, role, url, company_id from job_postings
`

func (q *Queries) GetCompany(ctx context.Context) (JobPosting, error) {
	row := q.db.QueryRowContext(ctx, getCompany)
	var i JobPosting
	err := row.Scan(
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.LastPosted,
		&i.Role,
		&i.Url,
		&i.CompanyID,
	)
	return i, err
}
