// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: company.sql

package sqlitedb

import (
	"context"
	"database/sql"
)

const addCompany = `-- name: AddCompany :exec
INSERT INTO companies (id, created_at, name, url, avatar, source_id)
VALUES (?, CURRENT_TIMESTAMP, ?, ?, ?, ?)
`

type AddCompanyParams struct {
	ID       string
	Name     string
	Url      string
	Avatar   sql.NullString
	SourceID string
}

func (q *Queries) AddCompany(ctx context.Context, arg AddCompanyParams) error {
	_, err := q.db.ExecContext(ctx, addCompany,
		arg.ID,
		arg.Name,
		arg.Url,
		arg.Avatar,
		arg.SourceID,
	)
	return err
}

const getCompany = `-- name: GetCompany :one
SELECT id, created_at, updated_at, name, url, avatar, source_id FROM companies
WHERE id = ?
`

func (q *Queries) GetCompany(ctx context.Context, id string) (Company, error) {
	row := q.db.QueryRowContext(ctx, getCompany, id)
	var i Company
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
		&i.Url,
		&i.Avatar,
		&i.SourceID,
	)
	return i, err
}
